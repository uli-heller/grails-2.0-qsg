h1. Building Relationships

{toc}

h2. Introduction

This document referres to chapter 4 of the "Grails Quick Start Guide". Yiu have to initialize the project with these commands:

bc. 
uli@uli-desktop:~/git/grails-qsg/chapter-04/TekDays$ echo "y"|../../bin/grails.sh upgrade
| Environment set to development..... 
        WARNING: This target will upgrade an older Grails application to 2.0.3.
        Are you sure you want to continue?
                   [y,n] y
| Plugin 'hibernate' with version '2.0.3' is already installed
| Plugin 'tomcat' with version '2.0.3' is already installed
| Project upgraded

h2. The TekUser Domain Class

bc. 
uli@uli-desktop:~/git/grails-qsg/chapter-04/TekDays$ ../../bin/grails.sh create-domain-class TekUser
| Compiling 38 source files
| Created file grails-app/domain/tekdays/TekUser.groovy
| Created file test/unit/tekdays/TekUserTests.groovy

The domain class gets this filename: grails-app/domain/tekdays/TekUser.groovy.

bc. 
uli@uli-desktop:~/git/grails-qsg/chapter-04/TekDays$ ../../bin/grails.sh create-controller TekUser
| Created file grails-app/controllers/tekdays/TekUserController.groovy
| Created file grails-app/views/tekUser
| Created file test/unit/tekdays/TekUserControllerTests.groovy

The controller gets this filename: grails-app/controllers/tekdays/TekUserController.groovy.

Within "BootStrap.groovy", you have to

* replace @new TekUser(...)@
* by @new tekdays.TekUser(...)@

The view looks like this:

!images/04-41-tekuser-list-view.png!

h2. One-to-One Relationships


h2. More About Domain Classes

No remarks

h2. Testing Our Domain Class

The unit test class has this filename: test/unit/tekdays/TekEventTests.groovy

Its content is pretty different from the book. It looks like this:

<pre>
package tekdays

import grails.test.mixin.*
import org.junit.*

/**
 * See the API for {@link grails.test.mixin.domain.DomainClassUnitTestMixin} for usage instructions
 */
@TestFor(TekEvent)
class TekEventTests {

    void testSomething() {
       fail "Implement me"
    }
}
</pre>

The test has to be modified like this:

<pre>
package tekdays

import grails.test.mixin.*
import org.junit.*

/**
 * See the API for {@link grails.test.mixin.domain.DomainClassUnitTestMixin} for usage instructions
 */
@TestFor(TekEvent)
class TekEventTests {

    void testToString() {
       def tekEvent = new TekEvent(
         name: 'Groovy One',
         city: 'San Francisco, CA',
         organizer: 'John Doe',
         venue: 'Moscone Center',
         startDate: new Date('6/2/2009'),
         endDate: new Date('6/5/2009'),
         description: 'This conference will cover all ...'
       )
       assertEquals 'Groovy One, San Francisco, CA', tekEvent.toString()
    }
}
</pre>

Running the unit tests goes like this:

bc. 
uli@uli-desktop:~/git/grails-qsg/chapter-03/TekDays$ ../../bin/grails.sh test-app -unit
| Completed 1 unit test, 0 failed in 1056ms
| Tests PASSED - view reports in target/test-reports

h2. Taking Control of Our Domain

Command to create the controller:

bc. 
uli@uli-desktop:~/git/grails-qsg/chapter-03/TekDays$ ../../bin/grails.sh create-controller TekEvent
| Created file grails-app/controllers/tekdays/TekEventController.groovy
| Created file grails-app/views/tekEvent
| Created file test/unit/tekdays/TekEventControllerTests.groovy

The controller and the unit test are created in different folders than mentioned in the book.

<pre>
package tekdays

class TekEventController {
    def scaffold = tekdays.TekEvent
}
</pre>

The scaffolded list view looks like this:

!images/03-32-scaffolded-list-view.png!

The scaffolded create view looks like this:

!images/03-33-scaffolded-create-view.png!

h2. Modifying Code That Doesn't Exist

The domain class has the filename: grails-app/domain/tekdays/TekEvent.groovy. It has to be modified like this:

<pre>
package tekdays

class TekEvent {
    String city
    String name
    String organizer
    String venue
    Date startDate
    Date endDate
    String description

    static constraints = {
	name()
	city()
	description(maxSize: 5000)
	organizer()
	venue()
	startDate()
	endDate()
    }

    String toString() {
      "${name}, ${city}"
    }
}
</pre>

The new scaffolded list view with contraints looks like this:

!images/03-34-list-view-with-constraints.png!

Die Editier-Maske sieht so aus:

!images/03-35-create-view-with-constraints.png!

h2. Bootstrapping Some Test Data

Beschreibung des Buches trifft weitgehend zu. In "BootStrap.groovy" mu√ü lediglich statt @new TekEvent(...)@ die Klasse samt Package angegeben werden, also @new tekdays.TekEvent(...)@

!images/03-36-list-view-with-sample-data.png!

!images/03-37-tekevent-show-view.png!

!images/03-38-tekevent-edit-view.png!
